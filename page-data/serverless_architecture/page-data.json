{"componentChunkName":"component---src-templates-post-jsx","path":"/serverless_architecture/","result":{"data":{"site":{"siteMetadata":{"title":"Changmin"}},"markdownRemark":{"id":"06c2dd6e-649c-5521-9e05-baf0cc44800d","excerpt":"1. 서버리스란 무엇인가? 서버리스(Serverless)는 개발자와 인프라 엔지니어가 서버 관리의 부담에서 벗어나 애플리케이션 로직에 집중할 수 있게 해준다고 해요. 2014년 AWS Lambda의 출시와 함께 본격적으로 주목받기 시작했으며, 이는 클라우드의 Auto Scaling과 Event-driven 컴퓨팅 기술 발전의 결과물이기도 하죠. AWS S…","html":"<h2 id=\"1-서버리스란-무엇인가\" style=\"position:relative;\"><a href=\"#1-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"1 서버리스란 무엇인가 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>1. 서버리스란 무엇인가?</h2>\n<p>서버리스(Serverless)는 개발자와 인프라 엔지니어가 서버 관리의 부담에서 벗어나 애플리케이션 로직에 집중할 수 있게 해준다고 해요. 2014년 AWS Lambda의 출시와 함께 본격적으로 주목받기 시작했으며, 이는 클라우드의 <strong>Auto Scaling</strong>과 <strong>Event-driven</strong> 컴퓨팅 기술 발전의 결과물이기도 하죠.</p>\n<p><img src=\"https://i.imgur.com/oSCGcF2.png\" alt=\"AWS Serverless Architecture Diagram\"></p>\n<h3 id=\"서버리스의-핵심-특징\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EC%9D%98-%ED%95%B5%EC%8B%AC-%ED%8A%B9%EC%A7%95\" aria-label=\"서버리스의 핵심 특징 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>서버리스의 핵심 특징</h3>\n<ul>\n<li><strong>Auto Scaling</strong>: 트래픽 부하에 따라 인스턴스가 자동으로 생성되고 제거됩니다.</li>\n<li><strong>관리형 인프라</strong>: 서버 프로비저닝, 패치 관리, 로드 밸런싱 등 인프라 운영 부담이 최소화됩니다.</li>\n<li><strong>Event Driven</strong>: S3 업로드, API 호출, 메시지 큐 등 특정 이벤트가 발생하면 함수가 실행됩니다.</li>\n<li><strong>비용 효율성</strong>: 사용한 리소스만큼만 과금되는 <strong>Pay-as-you-go</strong> 모델로, 유휴 서버 비용이 없습니다.</li>\n</ul>\n<blockquote>\n<p><strong>인프라 관점 인사이트</strong>: 서버리스는 전통적인 VM 기반 인프라에서 벗어나 클라우드 제공자가 하드웨어와 운영체제 레벨을 추상화한 결과로, 인프라 팀의 역할이 \"서버 관리\"에서 \"아키텍처 설계와 모니터링\"으로 전환되고 있어요.</p>\n</blockquote>\n<h2 id=\"2-서버리스의-대표적인-구현-방식\" style=\"position:relative;\"><a href=\"#2-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EC%9D%98-%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EA%B5%AC%ED%98%84-%EB%B0%A9%EC%8B%9D\" aria-label=\"2 서버리스의 대표적인 구현 방식 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>2. 서버리스의 대표적인 구현 방식</h2>\n<p>서버리스는 주로 <strong>FaaS(Function as a Service)</strong> 와 <strong>BaaS(Backend as a Service)</strong> 로 구현되는데요. 주요 클라우드 벤더별 서비스를 살펴보면 다음과 같아요.</p>\n<table>\n<thead>\n<tr>\n<th>서비스</th>\n<th>제공 업체</th>\n<th>주요 특징</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AWS Lambda</td>\n<td>AWS</td>\n<td>다양한 이벤트 소스 트리거, 강력한 생태계</td>\n</tr>\n<tr>\n<td>Google Cloud Functions</td>\n<td>GCP</td>\n<td>Firebase와 연동 강점, NoSQL 친화적</td>\n</tr>\n<tr>\n<td>Azure Functions</td>\n<td>Azure</td>\n<td>.NET 개발자 친화적, Durable Functions 지원</td>\n</tr>\n<tr>\n<td>Cloudflare Workers</td>\n<td>Cloudflare</td>\n<td>엣지에서 실행, 초저지연 응답 속도</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"FaaS-vs-BaaS\" style=\"position:relative;\"><a href=\"#FaaS-vs-BaaS\" aria-label=\"FaaS vs BaaS permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>FaaS vs BaaS</h3>\n<ul>\n<li><strong>FaaS</strong>: AWS Lambda처럼 개별 함수 단위로 코드가 실행되며, 인프라 엔지니어는 이벤트 트리거와 실행 환경만 신경 쓰면 됩니다.</li>\n<li><strong>BaaS</strong>: Firebase나 AWS Amplify처럼 인증, 데이터베이스, API Gateway 등 백엔드 기능을 통합 제공해 인프라 설계를 단순화합니다.</li>\n</ul>\n<blockquote>\n<p>FaaS는 단일 작업 단위에 최적화되어 있고, BaaS는 전체 백엔드 스택을 아우르니 프로젝트 요구사항에 따라 둘을 조합하는 하이브리드 접근도 가능해요.</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/4CDfBZy.png\" alt=\"\"></p>\n<h2 id=\"3-서버리스의-장점과-단점\" style=\"position:relative;\"><a href=\"#3-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EC%9D%98-%EC%9E%A5%EC%A0%90%EA%B3%BC-%EB%8B%A8%EC%A0%90\" aria-label=\"3 서버리스의 장점과 단점 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>3. 서버리스의 장점과 단점</h2>\n<h3 id=\"-서버리스의-장점\" style=\"position:relative;\"><a href=\"#-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\" 서버리스의 장점 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>✅ 서버리스의 장점</h3>\n<ol>\n<li><strong>운영 부담 감소</strong>: 서버 프로비저닝, OS 패치, 네트워크 설정 등 인프라 유지보수가 필요 없습니다.</li>\n<li><strong>비용 절감</strong>: 사용량 기반 과금으로 유휴 리소스 비용이 없습니다.</li>\n<li><strong>확장성</strong>: 수평 확장이 자동으로 처리되어 트래픽 급등에도 안정적입니다.</li>\n<li><strong>빠른 개발</strong>: MVP(최소 기능 제품) 구축 속도가 빨라집니다.</li>\n<li><strong>이벤트 기반 설계</strong>: 실시간 데이터 처리와 같은 이벤트 드리븐 시스템에 적합합니다.</li>\n</ol>\n<h3 id=\"️-서버리스의-단점\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"️ 서버리스의 단점 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>⚠️ 서버리스의 단점</h3>\n<ol>\n<li><strong>콜드 스타트</strong>: 초기 요청 시 지연이 발생하며, Java나 .NET 같은 무거운 런타임에서 두드러집니다.</li>\n<li><strong>벤더 락인</strong>: 특정 클라우드 벤더의 생태계에 종속될 위험이 큽니다.</li>\n<li><strong>트랜잭션 관리</strong>: 상태 유지(Stateful) 워크로드에는 부적합합니다.</li>\n<li><strong>실행 시간 제한</strong>: Lambda의 경우 최대 15분으로, 장시간 작업에 제약이 있습니다.</li>\n<li><strong>모니터링 복잡성</strong>: 분산 환경에서 로깅과 디버깅이 더 까다롭습니다.</li>\n</ol>\n<blockquote>\n<p>콜드 스타트는 프로비저닝된 동시성(Provisioned Concurrency)으로 완화할 수 있지만 추가 비용이 발생해요. 벤더 락인을 줄이려면 오픈소스 프레임워크(Serverless Framework 등)를 활용하는 것도 방법이 되겠네요.</p>\n</blockquote>\n<h2 id=\"4-서버리스에-대한-흔한-오해\" style=\"position:relative;\"><a href=\"#4-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EC%97%90-%EB%8C%80%ED%95%9C-%ED%9D%94%ED%95%9C-%EC%98%A4%ED%95%B4\" aria-label=\"4 서버리스에 대한 흔한 오해 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>4. 서버리스에 대한 흔한 오해</h2>\n<h3 id=\"-오해-1-서버리스는-서버가-없는-것이다\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%ED%95%B4-1-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EB%8A%94-%EC%84%9C%EB%B2%84%EA%B0%80-%EC%97%86%EB%8A%94-%EA%B2%83%EC%9D%B4%EB%8B%A4\" aria-label=\" 오해 1 서버리스는 서버가 없는 것이다 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>❌ 오해 1: “서버리스는 서버가 없는 것이다?”</h3>\n<p>서버리스는 <strong>“서버가 없는(Server-less)”</strong> 것이 아니라 <strong>“서버를 신경 쓰지 않아도 되는(Server-abstracted)”</strong> 아키텍처에요. 실제로는 클라우드 제공자의 서버에서 실행되지만, 인프라 관리를 우리가 직접 하지 않는다는 점이 핵심이죠.</p>\n<h3 id=\"-오해-2-서버리스는-항상-비용이-저렴하다\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%ED%95%B4-2-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EB%8A%94-%ED%95%AD%EC%83%81-%EB%B9%84%EC%9A%A9%EC%9D%B4-%EC%A0%80%EB%A0%B4%ED%95%98%EB%8B%A4\" aria-label=\" 오해 2 서버리스는 항상 비용이 저렴하다 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>❌ 오해 2: “서버리스는 항상 비용이 저렴하다?”</h3>\n<p>짧고 간헐적인 트래픽에서는 비용 효율적이지만, 지속적인 고부하 트래픽에서는 EC2 같은 전통 인프라가 더 저렴할 수 있어요.</p>\n<ul>\n<li><strong>예시</strong>: EC2 월 $30 고정 비용 vs Lambda 호출 횟수 증가 시 비용 상승.</li>\n</ul>\n<h3 id=\"-오해-3-모든-애플리케이션에-적합하다\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%ED%95%B4-3-%EB%AA%A8%EB%93%A0-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%97%90-%EC%A0%81%ED%95%A9%ED%95%98%EB%8B%A4\" aria-label=\" 오해 3 모든 애플리케이션에 적합하다 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>❌ 오해 3: “모든 애플리케이션에 적합하다?”</h3>\n<p>이벤트 기반 시스템이나 API 백엔드에는 적합하지만, 고성능 컴퓨팅이나 상태 유지 애플리케이션에는 한계가 있어요.</p>\n<h3 id=\"-오해-4-서버리스면-DevOps가-필요-없다\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%ED%95%B4-4-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EB%A9%B4-DevOps%EA%B0%80-%ED%95%84%EC%9A%94-%EC%97%86%EB%8B%A4\" aria-label=\" 오해 4 서버리스면 DevOps가 필요 없다 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>❌ 오해 4: “서버리스면 DevOps가 필요 없다?”</h3>\n<p>여전히 배포 파이프라인, 모니터링(AWS X-Ray, CloudWatch), 보안 설정이 필요합니다. 인프라 팀의 역할이 \"관리\"에서 \"최적화\"로 바뀔 뿐이에요.</p>\n<h2 id=\"5-서버리스를-도입해야-할-때와-피해야-할-때\" style=\"position:relative;\"><a href=\"#5-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EB%A5%BC-%EB%8F%84%EC%9E%85%ED%95%B4%EC%95%BC-%ED%95%A0-%EB%95%8C%EC%99%80-%ED%94%BC%ED%95%B4%EC%95%BC-%ED%95%A0-%EB%95%8C\" aria-label=\"5 서버리스를 도입해야 할 때와 피해야 할 때 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>5. 서버리스를 도입해야 할 때와 피해야 할 때</h2>\n<h3 id=\"-도입에-적합한-경우\" style=\"position:relative;\"><a href=\"#-%EB%8F%84%EC%9E%85%EC%97%90-%EC%A0%81%ED%95%A9%ED%95%9C-%EA%B2%BD%EC%9A%B0\" aria-label=\" 도입에 적합한 경우 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>✅ 도입에 적합한 경우</h3>\n<ul>\n<li><strong>이벤트 기반 워크로드</strong>: 파일 업로드 후 자동 처리 등.</li>\n<li><strong>변동 트래픽</strong>: 크리스마스 시즌 같은 대규모 이벤트.</li>\n<li><strong>빠른 개발</strong>: 스타트업의 MVP 제작.</li>\n<li><strong>IoT/실시간 처리</strong>: 센서 데이터 처리, 챗봇 등.</li>\n</ul>\n<h3 id=\"-피해야-할-경우\" style=\"position:relative;\"><a href=\"#-%ED%94%BC%ED%95%B4%EC%95%BC-%ED%95%A0-%EA%B2%BD%EC%9A%B0\" aria-label=\" 피해야 할 경우 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>❌ 피해야 할 경우</h3>\n<ul>\n<li><strong>고성능 컴퓨팅</strong>: 머신러닝 학습처럼 CPU 집약적인 작업.</li>\n<li><strong>장시간 작업</strong>: 배치 프로세싱(대안으로 ECS나 Batch 추천).</li>\n<li><strong>복잡한 트랜잭션</strong>: 상태 관리와 롤백이 중요한 시스템.</li>\n<li><strong>지속 고부하</strong>: Kubernetes로 컨테이너 오케스트레이션이 더 나음.</li>\n</ul>\n<h2 id=\"6-내가-서버리스-아키텍처에-빠진-이유\" style=\"position:relative;\"><a href=\"#6-%EB%82%B4%EA%B0%80-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EC%97%90-%EB%B9%A0%EC%A7%84-%EC%9D%B4%EC%9C%A0\" aria-label=\"6 내가 서버리스 아키텍처에 빠진 이유 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>6. 내가 서버리스 아키텍처에 빠진 이유?!</h2>\n<p>최근 진행한 프로젝트들은 인증/인가부터 간단한 데이터 서빙, 저장 등 다양한 부분에서 서버리스 아키텍처 기반으로 설계하고 있어요.</p>\n<p>특히, AWS Lambda, DynamoDB를 정말 잘 사용하고 있는데, Cognito 등 AWS에서 제공하는 다양한 서비스들과 연동하기도 편리하고 1인 개발을 할 때에 인프라 구축에 들어가는 비용을 절감할 수 있다는 점이 너무 좋은 것 같아요.</p>\n<p>중요 비즈니스 로직, 유휴 시간이 상대적으로 짧은 서비스들은 EC2 내에서 돌리지만 나머지는 대부분 Function 형태로 분리해서 설계하고 있구요.</p>\n<p>토이 프로젝트에서 가장 중요한 부분 중에 하나는 비용이잖아요? 사실, 우리가 간단하게 만드는 프로젝트는 대부분 무료 제공 할당량 내에 존재하기에 서버리스 서비스를 사용해도 비용이 들지 않는 장점도 있구요.</p>\n<p>이렇게 좋고 편리한 서버리스 아키텍처도 만능이 아니라는 것에 대해서는 계속 염두해두고 사용 중이에요.</p>\n<h2 id=\"7-결론-서버리스는-강력하지만-만능은-아니다\" style=\"position:relative;\"><a href=\"#7-%EA%B2%B0%EB%A1%A0-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4%EB%8A%94-%EA%B0%95%EB%A0%A5%ED%95%98%EC%A7%80%EB%A7%8C-%EB%A7%8C%EB%8A%A5%EC%9D%80-%EC%95%84%EB%8B%88%EB%8B%A4\" aria-label=\"7 결론 서버리스는 강력하지만 만능은 아니다 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>7. 결론: 서버리스는 강력하지만 만능은 아니다</h2>\n<p>서버리스는 인프라 관리 부담을 줄이고 빠른 개발과 확장성을 제공하는 강력한 도구에요. 하지만 콜드 스타트, 벤더 락인, 트랜잭션 관리의 한계를 고려해야 해요. 도입 전에는 다음을 점검하는게 좋을 것 같아요.</p>\n<ul>\n<li><strong>비용 분석</strong>: 트래픽 패턴에 따른 Lambda vs EC2 비교</li>\n<li><strong>성능 요구사항</strong>: 콜드 스타트 허용 범위 확인</li>\n<li><strong>운영 전략</strong>: 모니터링 및 배포 파이프라인 설계</li>\n</ul>\n<p>적절히 활용하면 서버리스는 클라우드 환경에서 인프라 엔지니어와 개발자 모두에게 혁신적인 가치를 제공할 수 있다는 것은 분명하다고 생각해요.</p>\n<p>토이 프로젝트를 생각하고 계신 분들, 이참에 서버리스 아키텍처로 도전해보시는 거 어때요?</p>","frontmatter":{"title":"서버리스 아키텍처의 진짜 의미와 오해","date":"March 02, 2025","update":null,"tags":["serverless","infra"],"series":null},"fields":{"slug":"/serverless_architecture/","readingTime":{"minutes":10.76}}},"seriesList":{"edges":[{"node":{"id":"53222982-f6a0-59ed-85e0-e19906070f62","fields":{"slug":"/koyeb-free-tier/"},"frontmatter":{"title":"Koyeb에 NodeJS(Express) 서버 배포하기"}}},{"node":{"id":"05a8a703-fcaa-5315-a4ba-514eda2a381e","fields":{"slug":"/lambda-exectution-environment/"},"frontmatter":{"title":"AWS Lambda의 Execution Environment 이해하기"}}},{"node":{"id":"06c2dd6e-649c-5521-9e05-baf0cc44800d","fields":{"slug":"/serverless_architecture/"},"frontmatter":{"title":"서버리스 아키텍처의 진짜 의미와 오해"}}}]},"previous":{"fields":{"slug":"/nestjs/"},"frontmatter":{"title":"NestJS Deep Dive"}},"next":null},"pageContext":{"id":"06c2dd6e-649c-5521-9e05-baf0cc44800d","series":null,"previousPostId":"59e80cb2-caf7-518e-b3d8-1b7d7c2a3fc3","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}