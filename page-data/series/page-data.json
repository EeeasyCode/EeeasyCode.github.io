{"componentChunkName":"component---src-pages-series-jsx","path":"/series/","result":{"data":{"site":{"siteMetadata":{"title":"Changmin"}},"allMarkdownRemark":{"group":[{"fieldValue":"Design Pattern","totalCount":1},{"fieldValue":"Gateway","totalCount":1},{"fieldValue":"JAVA","totalCount":1},{"fieldValue":"JVM","totalCount":1},{"fieldValue":"JWT","totalCount":1},{"fieldValue":"MSA","totalCount":3},{"fieldValue":"NestJS","totalCount":8},{"fieldValue":"NodeJS","totalCount":1},{"fieldValue":"OOP","totalCount":1},{"fieldValue":"Spring Cloud","totalCount":1},{"fieldValue":"TLS","totalCount":1},{"fieldValue":"aws-lambda","totalCount":1},{"fieldValue":"database","totalCount":2},{"fieldValue":"github-action","totalCount":2},{"fieldValue":"https","totalCount":1},{"fieldValue":"infra","totalCount":1},{"fieldValue":"istio","totalCount":2},{"fieldValue":"koyeb","totalCount":1},{"fieldValue":"nestjs","totalCount":1},{"fieldValue":"node.js","totalCount":1},{"fieldValue":"package manager","totalCount":1},{"fieldValue":"serverless","totalCount":2},{"fieldValue":"typeorm","totalCount":1},{"fieldValue":"가천대학교","totalCount":1},{"fieldValue":"객체지향","totalCount":1},{"fieldValue":"동시성","totalCount":1},{"fieldValue":"동아리","totalCount":1},{"fieldValue":"모니터링","totalCount":1},{"fieldValue":"문제해결","totalCount":1},{"fieldValue":"성능개선","totalCount":2},{"fieldValue":"성장","totalCount":1},{"fieldValue":"아키텍처 설계","totalCount":1},{"fieldValue":"오픈소스","totalCount":4},{"fieldValue":"오픈소스 멘토링","totalCount":1},{"fieldValue":"옵저버빌리티","totalCount":1},{"fieldValue":"인증/인가","totalCount":1},{"fieldValue":"자동화","totalCount":2},{"fieldValue":"졸업 프로젝트","totalCount":1},{"fieldValue":"주니어 개발자","totalCount":1},{"fieldValue":"추상화","totalCount":1},{"fieldValue":"클린코드","totalCount":2},{"fieldValue":"테크 컨텐츠 리뷰","totalCount":1},{"fieldValue":"회고","totalCount":1}],"nodes":[{"excerpt":"1. 서버리스란 무엇인가? 서버리스(Serverless)는 개발자와 인프라 엔지니어가 서버 관리의 부담에서 벗어나 애플리케이션 로직에 집중할 수 있게 해준다고 해요. 2014년 AWS Lambda의 출시와 함께 본격적으로 주목받기 시작했으며, 이는 클라우드의 Auto Scaling과 Event-driven 컴퓨팅 기술 발전의 결과물이기도 하죠. AWS S…","fields":{"slug":"/serverless_architecture/"},"frontmatter":{"date":"March 02, 2025","update":null,"title":"서버리스 아키텍처의 진짜 의미와 오해","tags":["serverless","infra"],"series":null}},{"excerpt":"NestJS 관련된 글을 몇 개 작성했었는데, 최근들어 NestJS에 대해 더 깊이 파보고 싶다는 생각이 들었다. 그래서, 이왕 이렇게 된 거 끝까지 극한으로 파헤쳐보려고 한다. 카테고리 자체는 공식 문서 정리, 성능 개선, 오픈소스 기여 등 다양하게 가져가볼 계획이고, 시리즈는 전부 NestJS에 넣을 생각이다. NestJS Deep Dive Repos…","fields":{"slug":"/nestjs/"},"frontmatter":{"date":"February 05, 2025","update":null,"title":"NestJS Deep Dive","tags":["NestJS"],"series":"NestJS"}},{"excerpt":"객체 지향 설계와 디자인 패턴: 핵심 정리 소프트웨어 개발에서 객체 지향 설계(OOD, Object-Oriented Design)는 단순히 현재의 문제를 해결하는 것을 넘어 재사용성과 확장성을 고려한 설계가 핵심임. 이를 실현하기 위해 숙련된 개발자들이 반복적으로 마주한 문제와 그 해법을 정리한 것이 바로 디자인 패턴(Design Pattern) 임. 어…","fields":{"slug":"/gof_design_pattern/"},"frontmatter":{"date":"January 24, 2025","update":null,"title":"GoF Design Pattern - 1장","tags":["Design Pattern","OOP"],"series":"GoF Design Pattern"}},{"excerpt":"AWS Lambda의 Execution Environment 이해하기 AWS Lambda 는 서버리스 컴퓨팅의 핵심 서비스로, 서버 관리 없이 코드를 실행할 수 있게 해줍니다. 이러한 편리함 뒤에는 'Execution Environment(실행 환경)' 라는 개념이 중요한 역할을 한다고 하는데요. 이번 글에서는 AWS Lambda의 Execution En…","fields":{"slug":"/lambda-exectution-environment/"},"frontmatter":{"date":"January 19, 2025","update":null,"title":"AWS Lambda의 Execution Environment 이해하기","tags":["aws-lambda","serverless"],"series":null}},{"excerpt":"안녕하세요, 저는 가천대학교 동아리 모집 관리 서비스를 기획하고 개발한 이창민입니다. 졸업 프로젝트를 위해 저를 포함한 개발자 4명에서 진행하게 된 프로젝트인데요, 서비스 명은 GACHDONG(가츠동) 으로 프로젝트 심사와 보고서 작성으로 인해 심사를 위한 서비스 구현까지만 진행되었고, 종강 이후 더 다양한 기능을 개발할 계획에 있습니다. 서비스 링크 서…","fields":{"slug":"/gachdong-01/"},"frontmatter":{"date":"December 10, 2024","update":null,"title":"가천대학교 동아리 모집 관리 서비스","tags":["졸업 프로젝트","가천대학교","동아리"],"series":"주니어 백엔드 개발자의 MSA 개발기"}},{"excerpt":"최근 프로젝트에서 백오피스를 만들게 되었는데, React로 Front 구현, NodeJS(Express)로 서버 개발을 진행하게 되었다. 백오피스 환경은 전부 무료 클라우드를 사용하고 싶어, React는 Netlify로 배포를 진행했고 NodeJS는 Koyeb로 배포를 진행했다. React는 성공적으로 배포가 되었지만, NodeJS는 배포 과정에서 에러를…","fields":{"slug":"/koyeb-free-tier/"},"frontmatter":{"date":"December 07, 2024","update":null,"title":"Koyeb에 NodeJS(Express) 서버 배포하기","tags":["koyeb","node.js"],"series":null}},{"excerpt":"JWT란 무엇인가? JSON Web Token (JWT) 는 JSON 기반의 토큰으로, 정보를 안전하고 간결하게 주고받기 위한 기술입니다. JWT는 주로 인증(Authentication) 과 권한 부여(Authorization) 에 사용되며, HTTP 헤더, URI 쿼리 파라미터 등 공간이 제한된 환경에서도 쉽게 활용할 수 있습니다. 인증/인가를 위한 방…","fields":{"slug":"/TIL_04/"},"frontmatter":{"date":"December 02, 2024","update":"Dec 02, 2024","title":"JWT란 무엇인가?","tags":["JWT","인증/인가"],"series":"TIL"}},{"excerpt":"언젠가 꼭 해보고 싶었던 컨텐츠를 이제부터 시작해보려고 합니다. 요즘 IT 서비스 기업이라면 대부분 테크 블로그를 운영하고 있습니다. 또한, 더 나아가 다양한 주제로 양질의 컨텐츠를 영상으로도 공개하고 있는데요. 저는 도입 검토를 진행 중이거나 적용해보고 싶은 혹은 새로운 기술들을 학습할 때, 이런 컨텐츠를 활용하고 있습니다. 정말 다양한 기업에서 특정 …","fields":{"slug":"/tech_review_01/"},"frontmatter":{"date":"December 02, 2024","update":null,"title":"테크 컨텐츠 리뷰를 시작합니다.","tags":["테크 컨텐츠 리뷰","주니어 개발자","성장"],"series":"TECH REVIEW"}},{"excerpt":"오늘은 일일 100만 건의 배송 데이터를 처리하고, 실시간 배송 상태를 고객에게 제공해야 하는 글로벌 물류 네트워크 관리 서비스를 설계할 때 고려해야 할 사항들을 설계해보았습니다. 특히 평균 TPS 70, 최대 TPS 300을 처리해야 하는 성능 요구사항이 존재합니다. 서비스 설계의 핵심 고려사항 확장성(Scalability): 수평 확장을 통해 부하에 …","fields":{"slug":"/TIL_03/"},"frontmatter":{"date":"November 27, 2024","update":"Nov 27, 2024","title":"글로벌 물류 네트워크 백엔드 서비스 설계","tags":["아키텍처 설계"],"series":"TIL"}},{"excerpt":"5부: 효율적인 동시성 동시성은 현대 컴퓨터의 계산 능력을 최대한 활용하기 위한 강력한 도구입니다. 여러 작업을 동시에 수행함으로써 응답 시간을 줄이고, 시스템의 효율성과 성능을 향상시킬 수 있습니다. 12장: 자바 메모리 모델과 스레드 12.1 들어가며 오늘날의 컴퓨팅 환경에서는 여러 작업을 동시에 처리해야 하는 요구가 증가하고 있습니다. 특히 서버나 …","fields":{"slug":"/jvm_12/"},"frontmatter":{"date":"November 27, 2024","update":"Dec 04, 2024","title":"12장 : 자바 메모리 모델과 스레드","tags":["JVM","JAVA","동시성"],"series":"JVM 밑바닥까지 파헤치기"}},{"excerpt":"Prerequisite : 본 글에서 언급되지만, 직접적인 설명은 하지 않는 것들입니다. kubernetes TLS istio 환경 저희 프로젝트는 이미 GKE 내에 istio 관련 설정이 기본적으로 셋팅되어 있습니다. Service Traffic GKE istio service mesh istio ingress gateway kiali 소개 서비스를 실…","fields":{"slug":"/k8s_tls_https/"},"frontmatter":{"date":"November 27, 2024","update":null,"title":"k8s와 istio에 TLS 적용하기","tags":["MSA","istio","TLS","https"],"series":"주니어 백엔드 개발자의 MSA 개발기"}},{"excerpt":"TL;DR 추상 vs 구체에 대해 실생활 예시를 통한 비교를 합니다. 추상 vs 구체 예시 CASE : 자동차 차를 운전하기 위해서 우리는 시동을 걸고, 기어를 D로 놓고 엑셀 페달을 밟으면 전진한다. 후진을 하기 위해서는 기어만 R로 변경하고 엑셀 페달을 밟는다. 멈추고 싶을 때 브레이크 페달을 밟는다. \n자동차 내부 구조 및 회로에 대해서 고민하고 알…","fields":{"slug":"/TIL_02/"},"frontmatter":{"date":"November 24, 2024","update":"Nov 27, 2024","title":"추상과 구체","tags":["추상화","클린코드"],"series":"TIL"}},{"excerpt":"최근에 김인제 님께서 진행하시는 \"오픈 소스 멘토링 7기\" 활동을 진행했어요. 인제 님에 대한 소개는 깃허브 링크로 대신하겠습니다! 주변 지인의 추천으로 오픈 소스 멘토링을 소개받았었고, 지원자가 정말 많을 것이라는 이야기를 듣고 솔직히 멘토링에 선발될거라고 생각도 못했어요. 그런데 한 번에 되어버렸네요! ㅋㅋ  왜 오픈 소스를? 사실, 오픈 소스에 대한…","fields":{"slug":"/oss_project_01/"},"frontmatter":{"date":"November 16, 2024","update":"Nov 16, 2024","title":"오픈 소스 기여: 작은 코드의 큰 가치","tags":["오픈소스","NestJS","오픈소스 멘토링"],"series":"Open Source"}},{"excerpt":"NestJS type narrowing context parameter on createParamDecorator's callback 진행 이슈 link PR link 이슈 내용  NestJS의 createParamDecorator의 callback 으로 전달되는 context의 type이 현재 any로 추론되는 것을 ExecutionContext Typ…","fields":{"slug":"/oss_project_02/"},"frontmatter":{"date":"November 16, 2024","update":"Nov 16, 2024","title":"[NestJS] type narrowing context parameter on createParamDecorator's callback","tags":["오픈소스","NestJS"],"series":"Open Source"}},{"excerpt":"NestJS @nestjs/microservices should handle RabbitMQ bindings and auto-generated queues 진행 이슈 link PR link 이슈 내용 nestjs 에서 제공하는 microservices 에서 RabbitMQ 를 사용할 경우, RMQ의 binding 과 auto-generated queues…","fields":{"slug":"/oss_project_03/"},"frontmatter":{"date":"November 16, 2024","update":"Nov 16, 2024","title":"[NestJS] @nestjs/microservices should handle RabbitMQ bindings and auto-generated queues","tags":["오픈소스","NestJS"],"series":"Open Source"}},{"excerpt":"Prerequisite : 본 글에서 언급되지만, 직접적인 설명은 하지 않는 것들입니다. 비동기/동기 Blocking/Non-Blocking Promise, async/await 첫 번째 NodeJS 스터디 주제는 \"싱글 스레드\" 입니다. Javascript를 접하면서 항상 들었던 말은 \"JS는 싱글 스레드 기반의 언어\" 라는 것인데요. 저는, 싱글 스레…","fields":{"slug":"/nodejs_study_01/"},"frontmatter":{"date":"November 12, 2024","update":"Nov 12, 2024","title":"왜 NodeJS는 싱글 스레드인거지?","tags":["NodeJS"],"series":"NodeJS Study"}},{"excerpt":"최근에 진행하고 있는 프로젝트에서 저희는 마이크로 서비스 아키텍처를 도입했습니다. 기술 스택 선정에 있어서 우선 가장 자주 사용되는 기술들과 Cloud Native 환경에 적합한 기술들을 선정하기 위해 노력했습니다. 프로젝트에서 사용중인 기술 Spec K8s istio (Service mesh, Ingress Gateway) argoCD Prometheu…","fields":{"slug":"/istio-srping-cloud-gateway/"},"frontmatter":{"date":"November 11, 2024","update":"Nov 11, 2024","title":"istio Ingress Gateway와 Spring Cloud Gateway 사용하기","tags":["MSA","Gateway","istio","Spring Cloud"],"series":"주니어 백엔드 개발자의 MSA 개발기"}},{"excerpt":"Prerequisite : 본 글에서 언급되지만, 직접적인 설명은 하지 않는 것들입니다. 객체 싱글톤 정적 팩토리 메서드 패턴 DI/IoC 최근에 프론트엔드 개발자 지인과 함께 커피챗을 했는데, \"객체\"와 \"싱글톤\" 에 관련된 주제로 이야기를 잠깐 나눴다. 정확히는 내가 정적 팩토리 메서드에 관한 이야기를 하다가 잘못 이야기를 한 부분이 있었는데, 정적 …","fields":{"slug":"/do_you_know_singleton/"},"frontmatter":{"date":"November 09, 2024","update":"Nov 09, 2024","title":"싱글톤에 대한 오해","tags":["객체지향"],"series":"TIL"}},{"excerpt":"TL;DR 간단하게 말해 모니터링과 옵저버빌리티는 진찰과 진단으로 분류할 수 있어요. 모니터링은 어디가 아픈지, 감기가 걸렸는지와 같은 상태를 확인하는 것이고 옵저버빌리티는 아픈 이유가 무엇인지 등에 대해 파악하는 것이라고 정리할 수 있겠네요. 단순히 정량적인 지표를 통한 상태 확인 뿐만 아니라 이 데이터들을 통합해서 원인을 파악하고 문제를 해결할 수 있…","fields":{"slug":"/msa-01/"},"frontmatter":{"date":"October 27, 2024","update":null,"title":"모니터링 vs 옵저버빌리티","tags":["MSA","모니터링","옵저버빌리티"],"series":"주니어 백엔드 개발자의 MSA 개발기"}},{"excerpt":"살면서 회고를 많이 해보지 않았던 것 같다. 회사에서 월마다 했던 개발자로서의 회고말고 학습에 대한 회고는 특히 처음이다. \nYAPP 활동을 하면서 KPT 회고 채널에 기웃거린 적이 있어, KPT 회고에 대해서는 어느정도 알고 있었고, 지식 공유자 \"우빈\"님께서 추천한 템플릿에 때마침 KPT 회고가 있어 적용해보려 한다.  Keep (유지하고 싶은 점) …","fields":{"slug":"/2024_KPT_회고/"},"frontmatter":{"date":"October 06, 2024","update":"Oct 06, 2024","title":"KPT 회고 첫 도전","tags":["클린코드","회고"],"series":"인프런 스터디 - 읽기좋은 코드"}},{"excerpt":"NestJS에서의 DI와 인터페이스 SpringBoot 우선 SpringBoot에서 OCP와 DIP를 지키기 위해, DI하는 경우 인터페이스를 사용하는 것을 볼 수 있다. 간단하게, DI 받는 부분에서 private final UserService: userService 로 명시하는 것을 볼 수 있다. NestJS 그럼 NestJS도 SpringBoot와…","fields":{"slug":"/nestjs-interface-di/"},"frontmatter":{"date":"August 24, 2024","update":"Aug 24, 2024","title":"NestJS에서 인터페이스 DI","tags":["NestJS"],"series":"NestJS"}},{"excerpt":"Toss AOP 라이브러리 한글 문서 번역 왜 한글 문서 번역? 최근에 오픈소스 기여에 대해 관심이 생기고 바로 내가 기여할 수 있는 게 무엇일까를 고민하던 중, 어떤 블로그에서 영어 문서를 한글 문서로 번역하는 것부터 시작해보라는 말을 보게 되었다. 그래서, 내가 최근 가장 관심있게 보던 오픈소스인 TOSS의 AOP 라이브러리를 확인해보았고, 마침 영어…","fields":{"slug":"/opensource-toss-aop/"},"frontmatter":{"date":"June 20, 2024","update":"Jun 20, 2024","title":"Toss AOP 라이브러리 한글 문서 번역 기여","tags":["오픈소스","NestJS"],"series":"Open Source"}},{"excerpt":"Feature 빌드 속도를 개선하기 위해, yarn classic -> yarn berry (zero install) -> pnpm으로 마이그레이션 하는 과정과 docker multi-stage 적용, nestjs에서 swc를 통한 컴파일 속도 최적화를 진행했습니다. Situation 현재 저희는 AWS ECS를 통해 서버를 배포하고 있습니다. githu…","fields":{"slug":"/nestjs-build-time/"},"frontmatter":{"date":"June 18, 2024","update":"Jun 18, 2024","title":"NestJS 빌드 속도 개선","tags":["NestJS","package manager","성능개선"],"series":"NestJS"}},{"excerpt":"Feature typeORM에서 연관관계가 없는 테이블 간 join 하는 방법 Tables User 테이블 Payment 테이블 각 테이블은 연관관계를 설정하지 않았고, payment 테이블에서 userId를 저장할 수 있게 했습니다. Join case 모든 user에 대한 payment 정보를 조회하기 위해 join을 합니다. 동작한 query 리턴된 …","fields":{"slug":"/typeorm-join/"},"frontmatter":{"date":"May 12, 2024","update":"May 12, 2024","title":"연관관계 없이 join","tags":["nestjs","typeorm","database"],"series":"NestJS"}},{"excerpt":"Feature Image Upload 서버에서 Sharp 라이브러리를 사용해 Content-type 변경하는 기능 구현 Situation 기존 운영중인 서비스은 S3에 이미지 업로드 할 때, image/jpg로 업로드됩니다.\nJPG는 PNG에 비해 작은 용량의 크기로 사진을 압축할 수 있지만 WebP와 비교했을 때 화질면에서 크게 떨어집니다.\n또한, We…","fields":{"slug":"/nestjs-image-upload/"},"frontmatter":{"date":"April 03, 2024","update":"Apr 03, 2024","title":"이미지 업로드 성능 개선","tags":["NestJS","성능개선"],"series":"NestJS"}},{"excerpt":"Tech Environment Python v3.12 actions/checkout@v3 actions/setup-python@v3 python code의 의존성을 위해 requirements.txt로 라이브러리 설치 member_list.json 해당 파일에 멤버 리스트를 등록하여 사용합니다. 이와 같은 형식으로 등록합니다. PR notificaiton…","fields":{"slug":"/github-slack-bot/"},"frontmatter":{"date":"February 27, 2024","update":"Feb 27, 2024","title":"PR 리뷰어 할당 봇 만들기","tags":["github-action","자동화"],"series":"automation"}},{"excerpt":"동시에 같은 DB 테이블 row를 업데이트 하는 상황은 \"DB의 동시성 이슈\"으로 생각해보면 좋을 것 같다. DB의 동시성 이슈 동시성이란 여러 요청이 동시에 동일한 자원(Data)에 접근하고 수정하려는 것을 말한다. 이로 인해, 발생하게 되는 문제를 동시성 문제라고 한다. 동시성 문제로 Data의 무결성이 깨지고 의도하지 않은 결과를 반환하게 되는 문제…","fields":{"slug":"/concurrency-issue/"},"frontmatter":{"date":"February 16, 2024","update":"Feb 16, 2024","title":"동시성 이슈 해결해보기","tags":["database","문제해결"],"series":"database"}},{"excerpt":"이번에 진행한 프로젝트에서 나는 CloudType을 사용하여 NestJS 기반 서버를 무료로 배포하였다. 무료로 서버를 배포할 수 있다는 것이 정말 큰 장점이었지만, CloudType의 무료 티어의 경우 연속 실행 제한이 걸려 매일 오전 3~9시 사이 프리티어로 구동 중인 서비스는 자동으로 중지 상태로 변경되는 문제가 존재한다.  사실, 정지되는 것은 문…","fields":{"slug":"/github-healthcheck-bot/"},"frontmatter":{"date":"December 27, 2023","update":"Dec 27, 2023","title":"github-action + slack으로 서버 헬스체크하기","tags":["github-action","자동화"],"series":"automation"}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}